{{$hostname := getenv "HOSTNAME"}}
{{$node_ipaddr := getv (printf "/nodes/%s/ipaddr" $hostname)}}
{{$local_asnum := getv "/racks/0/as_number"}}

# Configure logging
#log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };
log stderr all;
#log "tmp" all;
#log syslog all;
#log "/var/log/bird/master.log" all;
# Override router ID
router id {{$node_ipaddr}};

#include "/etc/bird/calico_os_filters.conf";

# Turn on global debugging of all protocols
debug protocols all;

protocol kernel {
  learn;          # Learn all alien routes from the kernel
  persist;        # Don't remove routes on bird shutdown
  scan time 2;    # Scan kernel routing table every 2 seconds
  import all;
  export all;     # Default is export none
  merge paths;    # For ECMP in routing table
  graceful restart;
}

protocol direct {
  interface "*";         # For exclude the ARCnets, use "-arc*", "*"
  #check link yes;
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
  scan time 2;    # Scan interfaces every 2 seconds
}

#<%- @rr_clients.each do |name, ipaddr| -%>
#include "/etc/bird/peers/compute__<%= name %>.conf";
#<%- end -%>

{{range $i := lsdir "/racks"}} {{if exists (printf "/racks/%s/veth/1" $i)}}
protocol bgp 'rack-{{$i}}' {
  local as {{$local_asnum}};
  neighbor {{getv (printf "/racks/%s/veth/1" $i)}} as {{getv (printf "/racks/%s/as_number" $i)}};
  description "rack-{{$i}}";
  #multihop;
  import all;
  export all;
  add paths;     # For ECMP in BGP session with TOR
  #next hop keep;
}
{{end}} {{end}}
