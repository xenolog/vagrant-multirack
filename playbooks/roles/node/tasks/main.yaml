---
- name: Prepare network configuration
  block:
  - name: Configure default gateway through Public network and route to VIPs
    template: src="999-multirack_lab.j2" dest="/etc/netplan/999-multirack_lab.yaml"
    register: rack_netconfig
  # - name: Add VIP1 into interfaces file
  #   lineinfile:
  #     dest: /etc/network/interfaces
  #     line: "      post-up ip addr add {{vip1}}/32 dev lo label lo:nginx || true"
  #     insertafter: "^iface lo inet loopback"
  - command: "ip route delete default"
    ignore_errors: True
    when: rack_netconfig.changed
  - shell: "netplan generate && netplan apply"
    when: rack_netconfig.changed

- name: Install and configure NGiNX
  block:
  - package:
      name: nginx-light
      state: present
  - lineinfile:
      dest: /etc/nginx/nginx.conf
      line: "        add_header X-Backend-Server $hostname;"
      insertafter: "^http\\s+{"
    notify: reload_nginx
  - meta: flush_handlers  # waiting nginx reload

- name: Install and start ExaBGP
  block:
  - name: Install setuptools (NOT pip !!!)
    package: name=python3-setuptools
  - name: Install latest ExaBGP
    command: "easy_install3 exabgp"
  - copy: src=exabgp.toml dest=/etc/confd/conf.d/exabgp.toml
  - copy: src=exabgp.tmpl dest=/etc/confd/templates/exabgp.tmpl
  - file: path=/etc/exabgp state=directory mode=755
  - copy: src=ch_nginx.conf dest=/etc/exabgp/
  - name: Generate ExaBGP config by confd
    command: confd -onetime -node=http://{{ master_node_ipaddr }}:4001
    environment:
      HOSTNAME: "{{ node_name }}"
      RACK_NUMBER: "{{ rack_number }}"
    # ignore_errors: True
  - name: ExaBGP unit
    copy: src=exabgp.service dest=/etc/systemd/system/exabgp.service
    notify: reload_systemd_units
  - meta: flush_handlers  # waiting reload systemd units
  - service: name=exabgp enabled=yes state=started
